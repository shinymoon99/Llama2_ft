[{"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "网络管理员预先配置以太网帧中的协议域和VLAN ID的映射关系表，如果收到的是Untagged帧，就依据该表给数据帧添加指定VLAN的Tag。然后数据帧将在指定VLAN中传输。", "output": "{\"text\": \"网络管理员预先配置以太网帧中的协议域和VLAN ID的映射关系表，如果收到的是Untagged帧，就依据该表给数据帧添加指定VLAN的Tag。然后数据帧将在指定VLAN中传输。\", \"node_list\": [{\"type\": \"operate\", \"text_span\": \"网络管理员预先配置以太网帧中的协议域和VLAN ID的映射关系表\", \"start\": 0, \"end\": 32, \"type_id\": \"操作0\"}, {\"type\": \"condition\", \"text_span\": \"如果收到的是Untagged帧\", \"start\": 33, \"end\": 48, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"依据该表给数据帧添加指定VLAN的Tag\", \"start\": 50, \"end\": 70, \"type_id\": \"操作1\"}, {\"type\": \"operate\", \"text_span\": \"数据帧将在指定VLAN中传输\", \"start\": 73, \"end\": 87, \"type_id\": \"操作2\"}], \"edge_list\": [[\"操作0\", \"条件0\"], [\"条件0\", \"操作1\"], [\"操作1\", \"操作2\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "\\# 配置SwitchA，启动OSPFv3，并设置其Router ID为1.1.1.1。", "output": "{\"text\": \"\\\\# 配置SwitchA，启动OSPFv3，并设置其Router ID为1.1.1.1。\", \"node_list\": [{\"type\": \"operate\", \"text_span\": \"配置SwitchA\", \"start\": 3, \"end\": 12, \"type_id\": \"操作0\"}, {\"type\": \"operate\", \"text_span\": \"启动OSPFv3\", \"start\": 13, \"end\": 21, \"type_id\": \"操作1\"}, {\"type\": \"operate\", \"text_span\": \"设置其Router ID为1.1.1.1\", \"start\": 23, \"end\": 43, \"type_id\": \"操作2\"}], \"edge_list\": [[\"操作0\", \"操作1\"], [\"操作0\", \"操作2\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "满足创建BFD会话的条件后，IS-IS将通过RM模块通知BFD模块直接在邻居间创建BFD会话。", "output": "{\"text\": \"满足创建BFD会话的条件后，IS-IS将通过RM模块通知BFD模块直接在邻居间创建BFD会话。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"满足创建BFD会话的条件后\", \"start\": 0, \"end\": 13, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"IS-IS将通过RM模块通知BFD模块直接在邻居间创建BFD会话\", \"start\": 14, \"end\": 46, \"type_id\": \"操作0\"}], \"edge_list\": [[\"条件0\", \"操作0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "配置事件的延迟上报功能，以减少事件的上报频率。使能事件的延迟上报功能后，在延迟上报周期内，系统中如果有同样的事件产生，则后产生的事件将被丢弃。延迟上报周期到达时，系统上报第一次产生的事件。", "output": "{\"text\": \"配置事件的延迟上报功能，以减少事件的上报频率。使能事件的延迟上报功能后，在延迟上报周期内，系统中如果有同样的事件产生，则后产生的事件将被丢弃。延迟上报周期到达时，系统上报第一次产生的事件。\", \"node_list\": [{\"type\": \"operate\", \"text_span\": \"配置事件的延迟上报功能\", \"start\": 0, \"end\": 11, \"type_id\": \"操作0\"}, {\"type\": \"status\", \"text_span\": \"减少事件的上报频率\", \"start\": 13, \"end\": 22, \"type_id\": \"状态0\"}, {\"type\": \"condition\", \"text_span\": \"使能事件的延迟上报功能后\", \"start\": 23, \"end\": 35, \"type_id\": \"条件0\"}, {\"type\": \"condition\", \"text_span\": \"在延迟上报周期内\", \"start\": 36, \"end\": 44, \"type_id\": \"条件1\"}, {\"type\": \"condition\", \"text_span\": \"系统中如果有同样的事件产生\", \"start\": 45, \"end\": 58, \"type_id\": \"条件2\"}, {\"type\": \"operate\", \"text_span\": \"后产生的事件将被丢弃\", \"start\": 60, \"end\": 70, \"type_id\": \"操作1\"}, {\"type\": \"operate\", \"text_span\": \"系统上报第一次产生的事件\", \"start\": 81, \"end\": 93, \"type_id\": \"操作2\"}, {\"type\": \"condition\", \"text_span\": \"延迟上报周期到达时\", \"start\": 71, \"end\": 80, \"type_id\": \"条件3\"}], \"edge_list\": [[\"操作0\", \"状态0\"], [\"操作0\", \"条件0\"], [\"条件0\", \"条件1\"], [\"条件1\", \"条件2\"], [\"条件2\", \"操作1\"], [\"条件3\", \"操作2\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "在接收者侧DR上配置了切换阈值后，当组播数据转发速率超过阈值时，才向源发送Join消息，开始SPT切换。", "output": "{\"text\": \"在接收者侧DR上配置了切换阈值后，当组播数据转发速率超过阈值时，才向源发送Join消息，开始SPT切换。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"在接收者侧DR上配置了切换阈值后\", \"start\": 0, \"end\": 16, \"type_id\": \"条件0\"}, {\"type\": \"condition\", \"text_span\": \"当组播数据转发速率超过阈值时\", \"start\": 17, \"end\": 31, \"type_id\": \"条件1\"}, {\"type\": \"operate\", \"text_span\": \"源发送Join消息\", \"start\": 34, \"end\": 43, \"type_id\": \"操作0\"}, {\"type\": \"operate\", \"text_span\": \"开始SPT切换\", \"start\": 44, \"end\": 51, \"type_id\": \"操作1\"}], \"edge_list\": [[\"条件0\", \"条件1\"], [\"条件1\", \"操作0\"], [\"操作0\", \"操作1\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "使能远端认证失败后账号锁定功能后，设备会记录所有认证失败的账号，包括：", "output": "{\"text\": \"使能远端认证失败后账号锁定功能后，设备会记录所有认证失败的账号，包括：\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"使能远端认证失败后账号锁定功能后\", \"start\": 0, \"end\": 16, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"设备会记录所有认证失败的账号\", \"start\": 17, \"end\": 31, \"type_id\": \"操作0\"}], \"edge_list\": [[\"条件0\", \"操作0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "进入接口视图，执行命令 **display this**，查看入接口配置的 **trust**命令，然后抓取入接口的报文，分析其携带的优先级类型并与接口信任的优先级类型进行比较：", "output": "{\"text\": \"进入接口视图，执行命令 **display this**，查看入接口配置的 **trust**命令，然后抓取入接口的报文，分析其携带的优先级类型并与接口信任的优先级类型进行比较：\", \"node_list\": [{\"type\": \"operate\", \"text_span\": \"进入接口视图\", \"start\": 0, \"end\": 6, \"type_id\": \"操作0\"}, {\"type\": \"operate\", \"text_span\": \"执行命令 **display this**\", \"start\": 7, \"end\": 28, \"type_id\": \"操作1\"}, {\"type\": \"operate\", \"text_span\": \"查看入接口配置的 **trust**命令\", \"start\": 29, \"end\": 49, \"type_id\": \"操作2\"}, {\"type\": \"operate\", \"text_span\": \"抓取入接口的报文\", \"start\": 52, \"end\": 60, \"type_id\": \"操作3\"}, {\"type\": \"operate\", \"text_span\": \"分析其携带的优先级类型\", \"start\": 61, \"end\": 72, \"type_id\": \"操作4\"}, {\"type\": \"operate\", \"text_span\": \"与接口信任的优先级类型进行比较\", \"start\": 73, \"end\": 88, \"type_id\": \"操作5\"}], \"edge_list\": [[\"操作0\", \"操作1\"], [\"操作1\", \"操作2\"], [\"操作2\", \"操作3\"], [\"操作3\", \"操作4\"], [\"操作3\", \"操作5\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "使用阈值告警功能，系统可以周期性地监控设备的运行状态，在达到一定的阈值（警戒条件）时向网管发送告警，并在警戒解除之后，发送恢复告警。", "output": "{\"text\": \"使用阈值告警功能，系统可以周期性地监控设备的运行状态，在达到一定的阈值（警戒条件）时向网管发送告警，并在警戒解除之后，发送恢复告警。\", \"node_list\": [{\"type\": \"operate\", \"text_span\": \"使用阈值告警功能\", \"start\": 0, \"end\": 8, \"type_id\": \"操作0\"}, {\"type\": \"status\", \"text_span\": \"系统可以周期性地监控设备的运行状态\", \"start\": 9, \"end\": 26, \"type_id\": \"状态0\"}, {\"type\": \"condition\", \"text_span\": \"在达到一定的阈值（警戒条件）时\", \"start\": 27, \"end\": 42, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"向网管发送告警\", \"start\": 42, \"end\": 49, \"type_id\": \"操作1\"}, {\"type\": \"condition\", \"text_span\": \"在警戒解除之后\", \"start\": 51, \"end\": 58, \"type_id\": \"条件1\"}, {\"type\": \"operate\", \"text_span\": \"发送恢复告警\", \"start\": 59, \"end\": 65, \"type_id\": \"操作2\"}], \"edge_list\": [[\"操作0\", \"状态0\"], [\"操作0\", \"条件0\"], [\"条件0\", \"操作1\"], [\"操作1\", \"条件1\"], [\"条件1\", \"操作2\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "当采样传感器组已被订阅且执行sensor-group（Subscription视图）命令配置了心跳间隔或者冗余抑制时，则无法在此采样传感器组的采样路径下配置过滤器。", "output": "{\"text\": \"当采样传感器组已被订阅且执行sensor-group（Subscription视图）命令配置了心跳间隔或者冗余抑制时，则无法在此采样传感器组的采样路径下配置过滤器。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"当采样传感器组已被订阅且执行sensor-group（Subscription视图）命令配置了心跳间隔或者冗余抑制时\", \"start\": 0, \"end\": 58, \"type_id\": \"条件0\"}, {\"type\": \"status\", \"text_span\": \"无法在此采样传感器组的采样路径下配置过滤器\", \"start\": 60, \"end\": 81, \"type_id\": \"状态0\"}], \"edge_list\": [[\"条件0\", \"状态0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "这样，当有RouterA到RouterD的流量被发送给RouterC时，由于没有必要的路由选择信息，这些流量就会被丢弃，如图2所示。", "output": "{\"text\": \"这样，当有RouterA到RouterD的流量被发送给RouterC时，由于没有必要的路由选择信息，这些流量就会被丢弃，如图2所示。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"当有RouterA到RouterD的流量被发送给RouterC时\", \"start\": 3, \"end\": 35, \"type_id\": \"条件0\"}, {\"type\": \"condition\", \"text_span\": \"由于没有必要的路由选择信息\", \"start\": 36, \"end\": 49, \"type_id\": \"条件1\"}, {\"type\": \"operate\", \"text_span\": \"流量就会被丢弃\", \"start\": 52, \"end\": 59, \"type_id\": \"操作0\"}], \"edge_list\": [[\"条件0\", \"条件1\"], [\"条件1\", \"操作0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "如果设备是某个VRRP6备份组的IP地址拥有者，将显示设备在该备份组的运行优先级为255。", "output": "{\"text\": \"如果设备是某个VRRP6备份组的IP地址拥有者，将显示设备在该备份组的运行优先级为255。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"如果设备是某个VRRP6备份组的IP地址拥有者\", \"start\": 0, \"end\": 23, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"将显示设备在该备份组的运行优先级为255\", \"start\": 24, \"end\": 44, \"type_id\": \"操作0\"}], \"edge_list\": [[\"条件0\", \"操作0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "如果客户希望将License订单中的一个资源型License，拆分成多个不同的License，供多台设备使用，则可以在ESDP系统上进行License授权拆分。", "output": "{\"text\": \"如果客户希望将License订单中的一个资源型License，拆分成多个不同的License，供多台设备使用，则可以在ESDP系统上进行License授权拆分。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"如果客户希望将License订单中的一个资源型License，拆分成多个不同的License，供多台设备使用\", \"start\": 0, \"end\": 54, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"可以在ESDP系统上进行License授权拆分\", \"start\": 56, \"end\": 79, \"type_id\": \"操作0\"}], \"edge_list\": [[\"条件0\", \"操作0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "当管理VRRP发生主备切换时，VSI之间的PW、AC接口也进行相应的主备切换，同时VSI清除自己的MAC地址，重新学习到新的主用设备的MAC地址。", "output": "{\"text\": \"当管理VRRP发生主备切换时，VSI之间的PW、AC接口也进行相应的主备切换，同时VSI清除自己的MAC地址，重新学习到新的主用设备的MAC地址。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"当管理VRRP发生主备切换时\", \"start\": 0, \"end\": 14, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"VSI之间的PW、AC接口也进行相应的主备切换\", \"start\": 15, \"end\": 38, \"type_id\": \"操作0\"}, {\"type\": \"operate\", \"text_span\": \"VSI清除自己的MAC地址\", \"start\": 41, \"end\": 54, \"type_id\": \"操作1\"}, {\"type\": \"operate\", \"text_span\": \"重新学习到新的主用设备的MAC地址\", \"start\": 55, \"end\": 72, \"type_id\": \"操作2\"}], \"edge_list\": [[\"条件0\", \"操作0\"], [\"条件0\", \"操作1\"], [\"操作1\", \"操作2\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "当网络中到达同一目的地存在同一路由协议发现的多条路由，且这几条路由的开销值也相同，那么这些路由就是等价路由，可以实现负载分担。", "output": "{\"text\": \"当网络中到达同一目的地存在同一路由协议发现的多条路由，且这几条路由的开销值也相同，那么这些路由就是等价路由，可以实现负载分担。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"当网络中到达同一目的地存在同一路由协议发现的多条路由，且这几条路由的开销值也相同\", \"start\": 0, \"end\": 40, \"type_id\": \"条件0\"}, {\"type\": \"status\", \"text_span\": \"这些路由就是等价路由，可以实现负载分担\", \"start\": 43, \"end\": 62, \"type_id\": \"状态0\"}], \"edge_list\": [[\"条件0\", \"状态0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "配置接口GE0/0/1在1秒钟内最多允许50个ARP报文通过，当ARP报文超过该限速值时，60秒内持续丢弃该接口下的所有ARP报文", "output": "{\"text\": \"配置接口GE0/0/1在1秒钟内最多允许50个ARP报文通过，当ARP报文超过该限速值时，60秒内持续丢弃该接口下的所有ARP报文\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"当ARP报文超过该限速值时\", \"start\": 31, \"end\": 44, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"60秒内持续丢弃该接口下的所有ARP报文\", \"start\": 45, \"end\": 65, \"type_id\": \"操作1\"}], \"edge_list\": [[\"条件0\", \"操作1\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "系统检测到企图修改ARP表项的攻击报文时，会发出告警。", "output": "{\"text\": \"系统检测到企图修改ARP表项的攻击报文时，会发出告警。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"系统检测到企图修改ARP表项的攻击报文时\", \"start\": 0, \"end\": 20, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"发出告警\", \"start\": 22, \"end\": 26, \"type_id\": \"操作0\"}], \"edge_list\": [[\"条件0\", \"操作0\"]]}\n"}, {"instruction": "你是一个流程抽取模型，请按照如下流程抽取任务定义和格式对于输入的数据进行抽取。\n#任务定义\n任务定义：从流程文本中，抽取出子句和子句关系。子句包括状态、操作、判断、条件四类。\n#标注结果json格式\ntext: 文本\nnode_list: 子句列表， 每一个子句包括以下信息：\n    id: 唯一标识\n    type: 子句类型，4种类型之一\n    text_span: 子句在句子中的位置\n    start: 文本开始位置 end: 文本结束位置\nedge_list：表示子句间顺序关系的邻接表", "input": "要实现PC1和PC2通过公网互通，需要在SwitchA和SwitchC之间建立直连链路，部署GRE隧道，通过静态路由指定到达对端的报文通过Tunnel接口转发，PC1和PC2就可以互相通信了。", "output": "{\"text\": \"要实现PC1和PC2通过公网互通，需要在SwitchA和SwitchC之间建立直连链路，部署GRE隧道，通过静态路由指定到达对端的报文通过Tunnel接口转发，PC1和PC2就可以互相通信了。\", \"node_list\": [{\"type\": \"condition\", \"text_span\": \"要实现PC1和PC2通过公网互通\", \"start\": 0, \"end\": 16, \"type_id\": \"条件0\"}, {\"type\": \"operate\", \"text_span\": \"SwitchA和SwitchC之间建立直连链路\", \"start\": 20, \"end\": 43, \"type_id\": \"操作0\"}, {\"type\": \"operate\", \"text_span\": \"部署GRE隧道\", \"start\": 44, \"end\": 51, \"type_id\": \"操作1\"}, {\"type\": \"operate\", \"text_span\": \"通过静态路由指定到达对端的报文通过Tunnel接口转发\", \"start\": 52, \"end\": 79, \"type_id\": \"操作2\"}, {\"type\": \"status\", \"text_span\": \"PC1和PC2就可以互相通信\", \"start\": 80, \"end\": 94, \"type_id\": \"状态0\"}], \"edge_list\": [[\"条件0\", \"操作0\"], [\"操作0\", \"操作1\"], [\"操作1\", \"操作2\"], [\"操作2\", \"状态0\"]]}\n"}]